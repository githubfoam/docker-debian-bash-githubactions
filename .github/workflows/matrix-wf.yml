name: "matrix CI workflow"


on:
  push:
    branches: [ test ]
  # schedule:
  #     - cron:  '0 0 1 * *' ##execution of a task in the first minute of the month 


jobs:

  ubuntu-latest-buster-job:
    name: "buster docker ubuntu latest"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
         - openldap 
    env:
      distribution: "debian" #https://hub.docker.com/_/debian
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "build buster image matrix"
      run: |
        dir=$(pwd)
        cd $dir/dockerfiles/buster
        cd ${{matrix.node}}
        echo "############################################"
        echo "############################################"
        echo "Building  ${{matrix.node}} dockerfile"
        echo "############################################"
        echo "############################################"        
        docker build -t ${distribution}/${{matrix.node}} .    

  ubuntu-latest-stretch-job:
    name: "stretch docker ubuntu latest"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
         - openldap
    env:
      distribution: "debian" #https://hub.docker.com/_/debian 
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "build stretch image matrix"
      run: |
        dir=$(pwd)
        cd $dir/dockerfiles/stretch
        cd ${{matrix.node}}
        echo "############################################"
        echo "############################################"
        echo "Building  ${{matrix.node}} dockerfile"
        echo "############################################"
        echo "############################################"        
        docker build -t ${distribution}/${{matrix.node}} .
